trigger:
- none

pool:
  vmImage: 'windows-latest' # Changed to a Windows runner

jobs:
- job: build_and_test_all_samples
  displayName: 'Build and Test All Client Samples'
  variables:
    awsRegion: 'us-east-1'
    ecrRepository: 'fluent-restful-nightly'
    imageTag: 'latest'
    containerName: 'fluent-restful-server'
    webserverUrl: 'http://localhost:8080'

  steps:
  # STEP 1: CHECKOUT CODE
  - checkout: self

  # STEP 2A: Write the script logic to a PowerShell file (.ps1)
  - powershell: |
      # This command block writes everything between @' and '@ into a new file.
      @'
      # Exit immediately if a command fails
      $ErrorActionPreference = "Stop"

      Write-Host "Getting AWS Account ID..."
      $AWS_ACCOUNT_ID = (Get-STSCallerIdentity).Account
      
      $IMAGE_URI = "$($AWS_ACCOUNT_ID).dkr.ecr.us-east-1.amazonaws.com/fluent-restful-nightly:latest"

      Write-Host "Logging in to ECR..."
      Get-ECRLoginCommand -Region us-east-1 | Invoke-Expression
      
      Write-Host "Pulling image: $IMAGE_URI"
      docker pull $IMAGE_URI

      Write-Host "Starting container with image: $IMAGE_URI"
      docker run -d --name fluent-restful-server -p 8080:8080 $IMAGE_URI
      
      Write-Host "Waiting for the server to be ready..."
      $timeout = 100
      while ($true) {
          try {
              $response = Invoke-WebRequest -Uri "http://localhost:8080/v2/version" -UseBasicParsing
              if ($response.StatusCode -eq 200) {
                  Write-Host "âœ… Server is up and running!"
                  break
              }
          }
          catch {}
          
          Start-Sleep -Seconds 5
          $timeout -= 5
          if ($timeout -le 0) {
              Write-Host "Error: Server did not become ready in time."
              docker logs fluent-restful-server
              exit 1
          }
          Write-Host "Still waiting..."
      }
      '@ | Set-Content -Path ./run_docker_steps.ps1
    displayName: 'Create Docker Steps Script'

  # STEP 2B: Execute the script file with AWS credentials
  - task: AWSPowerShellModuleScript@1
    displayName: 'Login, Pull from ECR, and Start Server'
    inputs:
      awsCredentials: 'AWS ECR'
      regionName: $(awsRegion)
      filePath: './run_docker_steps.ps1'

  # STEP 3: BUILD AND TEST .NET
  - powershell: |
      $configFile = "RESTful Engine/Client Code/v2 API/RESTful-Client-.NET-Sample/RESTful-Client-.NET-Sample/App.config"
      (Get-Content $configFile) -replace '\[YOUR_RESTFUL_SERVER\]', '$(webserverUrl)' | Set-Content $configFile
      Write-Host "Verifying App.config:"
      Get-Content $configFile
    displayName: 'Update & Verify .NET App.config'

  - task: DotNetCoreCLI@2
    displayName: 'Build .NET Sample'
    inputs:
      command: 'build'
      projects: 'RESTful Engine/Client Code/v2 API/RESTful-Client-.NET-Sample/**/*.csproj'

  - powershell: |
      Set-Location "RESTful Engine/Client Code/v2 API/RESTful-Client-.NET-Sample/RESTful-Client-.NET-Sample/bin/Debug/net8.0"
      dotnet RESTful-Client-.NET-Sample.dll
    displayName: 'Run .NET Sample from output directory'

  # STEP 4: BUILD AND TEST JAVA (Now runs the .bat file)
  - powershell: |
      $configFile = "RESTful Engine/Client Code/v2 API/RESTful-Client-Java-Sample/src/main/resources/application.properties"
      (Get-Content $configFile) -replace '\[YOUR_RESTFUL_SERVER\]', '$(webserverUrl)' | Set-Content $configFile
    displayName: 'Update & Verify Java application.properties'

  - powershell: |
      Set-Location "RESTful Engine/Client Code/v2 API/RESTful-Client-Java-Sample"
      .\GenerateDocument.bat
    displayName: 'Run Java Sample using GenerateDocument.bat'